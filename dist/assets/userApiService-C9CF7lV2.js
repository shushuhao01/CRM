var U=Object.defineProperty;var w=(o,e,r)=>e in o?U(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r;var h=(o,e,r)=>w(o,typeof e!="symbol"?e+"":e,r);var t=(o,e,r)=>new Promise((s,a)=>{var u=c=>{try{i(r.next(c))}catch(l){a(l)}},I=c=>{try{i(r.throw(c))}catch(l){a(l)}},i=c=>c.done?s(c.value):Promise.resolve(c.value).then(u,I);i((r=r.apply(o,e)).next())});import{b as y}from"./settings-CuxbDWOu.js";import"./elementPlus-Bmwh7Rh8.js";import"./vendor-D8Vxqhr-.js";import"./utils-ywHRn0uI.js";const n=class n{constructor(){h(this,"api");this.api=y}static getInstance(){return n.instance||(n.instance=new n),n.instance}getUsers(){return t(this,arguments,function*(e={}){try{const r=yield this.api.paginate("/users",e);return console.log(`[UserAPI] 获取用户列表成功，共 ${r.total} 个用户`),r}catch(r){throw console.error("[UserAPI] 获取用户列表失败:",r),r}})}getUserList(){return t(this,arguments,function*(e={}){try{const r=yield this.getUsers(e);return{data:r.data,total:r.total}}catch(r){throw console.error("[UserAPI] 获取用户列表失败:",r),r}})}getUserById(e){return t(this,null,function*(){try{const r=yield this.api.get(`/users/${e}`);return console.log(`[UserAPI] 获取用户详情成功: ${r.username}`),r}catch(r){throw console.error(`[UserAPI] 获取用户详情失败 (ID: ${e}):`,r),r}})}createUser(e){return t(this,null,function*(){try{const r=yield this.api.post("/users",e);return console.log(`[UserAPI] 创建用户成功: ${r.username}`),r}catch(r){throw console.error("[UserAPI] 创建用户失败:",r),r}})}updateUser(e,r){return t(this,null,function*(){try{const s=yield this.api.put(`/users/${e}`,r);return console.log(`[UserAPI] 更新用户成功: ${s.username}`),s}catch(s){throw console.error(`[UserAPI] 更新用户失败 (ID: ${e}):`,s),s}})}deleteUser(e){return t(this,null,function*(){try{yield this.api.delete(`/users/${e}`),console.log(`[UserAPI] 删除用户成功 (ID: ${e})`)}catch(r){throw console.error(`[UserAPI] 删除用户失败 (ID: ${e}):`,r),r}})}deleteUsers(e){return t(this,null,function*(){try{yield this.api.batch("/users/batch-delete",e.map(r=>({action:"delete",id:r}))),console.log(`[UserAPI] 批量删除用户成功，共 ${e.length} 个`)}catch(r){throw console.error("[UserAPI] 批量删除用户失败:",r),r}})}resetPassword(e){return t(this,null,function*(){try{yield this.api.post(`/users/${e.userId}/reset-password`,{newPassword:e.newPassword}),console.log(`[UserAPI] 重置密码成功 (ID: ${e.userId})`)}catch(r){throw console.error(`[UserAPI] 重置密码失败 (ID: ${e.userId}):`,r),r}})}toggleUserStatus(e,r){return t(this,null,function*(){try{const s=yield this.api.patch(`/users/${e}/status`,{status:r});return console.log(`[UserAPI] 用户状态更新成功 (ID: ${e}, Status: ${r})`),s}catch(s){throw console.error(`[UserAPI] 用户状态更新失败 (ID: ${e}):`,s),s}})}getUserStatistics(){return t(this,null,function*(){try{const e=yield this.api.get("/users/statistics");return console.log("[UserAPI] 获取用户统计信息成功"),e}catch(e){throw console.error("[UserAPI] 获取用户统计信息失败:",e),e}})}searchUsers(e,r=10){return t(this,null,function*(){try{const s=yield this.api.get("/users/search",{q:e,limit:r});return console.log(`[UserAPI] 搜索用户成功，找到 ${s.length} 个结果`),s}catch(s){throw console.error("[UserAPI] 搜索用户失败:",s),s}})}checkUsernameAvailability(e){return t(this,null,function*(){try{return(yield this.api.get("/users/check-username",{username:e})).available}catch(r){throw console.error("[UserAPI] 检查用户名可用性失败:",r),r}})}checkEmailAvailability(e){return t(this,null,function*(){try{return(yield this.api.get("/users/check-email",{email:e})).available}catch(r){throw console.error("[UserAPI] 检查邮箱可用性失败:",r),r}})}uploadAvatar(e,r){return t(this,null,function*(){try{const s=yield this.api.upload(`/users/${e}/avatar`,r);return console.log(`[UserAPI] 头像上传成功 (ID: ${e})`),s.url}catch(s){throw console.error(`[UserAPI] 头像上传失败 (ID: ${e}):`,s),s}})}getUserOperationLogs(s){return t(this,arguments,function*(e,r={}){try{const a=yield this.api.paginate(`/users/${e}/operation-logs`,r);return console.log(`[UserAPI] 获取用户操作日志成功 (ID: ${e})`),a}catch(a){throw console.error(`[UserAPI] 获取用户操作日志失败 (ID: ${e}):`,a),a}})}exportUsers(){return t(this,arguments,function*(e={}){try{const r=yield this.api.get("/users/export",e,{responseType:"blob"});return console.log("[UserAPI] 导出用户数据成功"),r}catch(r){throw console.error("[UserAPI] 导出用户数据失败:",r),r}})}importUsers(e){return t(this,null,function*(){try{const r=yield this.api.upload("/users/import",e);return console.log(`[UserAPI] 导入用户数据成功，成功: ${r.success}，失败: ${r.failed}`),r}catch(r){throw console.error("[UserAPI] 导入用户数据失败:",r),r}})}};h(n,"instance");let p=n;const D=p.getInstance();export{p as UserApiService,D as userApiService};
